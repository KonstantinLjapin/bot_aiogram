from aiogram.types import (KeyboardButton, ReplyKeyboardMarkup, KeyboardButtonPollType)
from aiogram.utils.keyboard import ReplyKeyboardBuilder
import random

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –∫–Ω–æ–ø–æ–∫
button_dog: KeyboardButton = KeyboardButton(text='–°–æ–±–∞–∫ ü¶Æ')
button_cucumber: KeyboardButton = KeyboardButton(text='–û–≥—É—Ä—Ü–æ–≤ ü•í')

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –∫–Ω–æ–ø–æ–∫ –∫–æ–º–∞–Ω–¥
button_1: KeyboardButton = KeyboardButton(text='q')
button_2: KeyboardButton = KeyboardButton(text='z')
button_3: KeyboardButton = KeyboardButton(text='captcha')
button_4: KeyboardButton = KeyboardButton(text='not exist')
button_5: KeyboardButton = KeyboardButton(text='not exist')
button_6: KeyboardButton = KeyboardButton(text='not exist')
button_7: KeyboardButton = KeyboardButton(text='not exist')
button_8: KeyboardButton = KeyboardButton(text='not exist')
button_9: KeyboardButton = KeyboardButton(text='not exist')

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –¥–æ–±–∞–≤–ª—è—è –≤ –Ω–µ–≥–æ –∫–Ω–æ–ø–∫–∏
keyboard_q: ReplyKeyboardMarkup = ReplyKeyboardMarkup(
                                    keyboard=[[button_dog, button_cucumber]])


# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –¥–æ–±–∞–≤–ª—è—è –≤ –Ω–µ–≥–æ –∫–Ω–æ–ø–∫–∏
func_keyboard: ReplyKeyboardMarkup = ReplyKeyboardMarkup(
                        keyboard=[[button_1, button_2, button_3],
                                  [button_4, button_5, button_6],
                                  [button_7, button_8, button_9]],
                        resize_keyboard=True)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∏–ª–¥–µ—Ä
kb_builder: ReplyKeyboardBuilder = ReplyKeyboardBuilder()
captcha_builder: ReplyKeyboardBuilder = ReplyKeyboardBuilder()
# –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ kb_bilder
contact_btn: KeyboardButton = KeyboardButton(
                                text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω',
                                request_contact=True)
geo_btn: KeyboardButton = KeyboardButton(
                                text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é',
                                request_location=True)
poll_btn: KeyboardButton = KeyboardButton(
                                text='–°–æ–∑–¥–∞—Ç—å –æ–ø—Ä–æ—Å/–≤–∏–∫—Ç–æ—Ä–∏–Ω—É',
                                request_poll=KeyboardButtonPollType())
captcha_btn: KeyboardButton = KeyboardButton(
                                text='captcha')


# button_captcha
def captcha_keys(temp: int) -> list:
    """

    :param temp:
    :return: list of "KeyboardButton" with answer
    """
    temp = str(temp)
    first_button: KeyboardButton = KeyboardButton(
        text=temp)
    next_button: KeyboardButton = KeyboardButton(
        text='joke')
    next_last_button: KeyboardButton = KeyboardButton(
        text='joke')
    last_button: KeyboardButton = KeyboardButton(
        text='joke')

    return [first_button, next_button, next_last_button, last_button]


# –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –±–∏–ª–¥–µ—Ä fun
kb_builder.row(contact_btn, geo_btn, poll_btn, captcha_btn,  width=1)




# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
keyboard_z: ReplyKeyboardMarkup = kb_builder.as_markup(
                                    resize_keyboard=True,
                                    one_time_keyboard=True)

keyboard_captcha: ReplyKeyboardMarkup =  captcha_builder.as_markup(
                                    resize_keyboard=True,
                                    one_time_keyboard=True)

if __name__ == '__main__':
    pass
